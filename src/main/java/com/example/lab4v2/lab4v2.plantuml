@startuml

title __LAB4V2's Class Diagram__\n

  namespace a {
    namespace om.example.lab4v2 {
      class com.example.lab4v2.HelloApplication {
          {static} - scene : Scene
          {static} - window : Stage
          + changeScene()
          + getStage()
          {static} + main()
          + start()
      }
    }
  }
  

  namespace a {
    namespace om.example.lab4v2 {
      class com.example.lab4v2.HelloController {
          {static} + bool : boolean
          + dateL : Label
          + image1 : ImageView
          + image2 : ImageView
          + image3 : ImageView
          + image4 : ImageView
          + label1 : Label
          + label2 : Label
          + label3 : Label
          + label4 : Label
          {static} + list : MyLinkedList<Slide>
          + titleL : Label
          + Capstone()
          + Chess()
          + Education()
          + Hangman()
          + Pokemon()
          + SocialNet()
          + ThesisCollect()
          + Work()
          + changeController()
          + exit()
          + readMyList()
          + setDateL()
          + setImage1()
          + setImage2()
          + setImage3()
          + setImage4()
          + setLabel1()
          + setLabel2()
          + setLabel3()
          + setLabel4()
          + setTitleL()
      }
    }
  }
  

  namespace a {
    namespace om.example.lab4v2 {
      interface com.example.lab4v2.LinkedListInterface {
          {abstract} + isEmpty()
          {abstract} + offerFirst()
          {abstract} + peekBetween()
          {abstract} + peekFirst()
          {abstract} + peekLast()
          {abstract} + popBetween()
          {abstract} + popFirst()
          {abstract} + popLast()
          {abstract} + pushLast()
          {abstract} + putBetween()
          {abstract} + size()
          {abstract} + traverse()
      }
    }
  }
  

  namespace a {
    namespace om.example.lab4v2 {
      class com.example.lab4v2.MyLinkedList {
          - size : int
          + MyLinkedList()
          + isEmpty()
          + offerFirst()
          + peekBetween()
          + peekFirst()
          + peekLast()
          + popBetween()
          + popFirst()
          + popLast()
          + pushLast()
          + putBetween()
          + size()
          + traverse()
      }
    }
  }
  

  namespace a {
    namespace om.example.lab4v2 {
      class com.example.lab4v2.MyLinkedList.Node {
          ~ Node()
          ~ Node()
      }
    }
  }
  

  namespace a {
    namespace om.example.lab4v2 {
      class com.example.lab4v2.Slide {
          - Date : String
          - Image1 : String
          - Image2 : String
          - Image3 : String
          - Image4 : String
          - Label1 : String
          - Label2 : String
          - Label3 : String
          - Label4 : String
          - Title : String
          + Slide()
          + getDate()
          + getImage1()
          + getImage2()
          + getImage3()
          + getImage4()
          + getLabel1()
          + getLabel2()
          + getLabel3()
          + getLabel4()
          + getTitle()
          + setDate()
          + setImage1()
          + setImage2()
          + setImage3()
          + setImage4()
          + setLabel1()
          + setLabel2()
          + setLabel3()
          + setLabel4()
          + setTitle()
          + toString()
      }
    }
  }
  

  com.example.lab4v2.HelloApplication -up-|> javafx.application.Application
  com.example.lab4v2.MyLinkedList .up.|> com.example.lab4v2.LinkedListInterface
  com.example.lab4v2.MyLinkedList o-- com.example.lab4v2.MyLinkedList.Node : head
  com.example.lab4v2.MyLinkedList +-down- com.example.lab4v2.MyLinkedList.Node
  com.example.lab4v2.MyLinkedList.Node o-- T : data
  com.example.lab4v2.MyLinkedList.Node o-- com.example.lab4v2.MyLinkedList.Node : next


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
